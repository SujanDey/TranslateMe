<Application x:Class="TranslateMe.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="UI/Windows/MainWindow.xaml">
    <Application.Resources>

        <Color x:Key="ControlColor">#FFF0F0F0</Color>
        <Color x:Key="TitleAccentColor">#FFFFFFFF</Color>
        <Color x:Key="TitleBackgroundColor">SteelBlue</Color>
        <Color x:Key="HoverAccentColor">#303030</Color>
        <Color x:Key="HoverBackgroundColor">LightSteelBlue</Color>
        <Color x:Key="SelectedAccentColor">#FFFFFFFF</Color>
        <Color x:Key="SelectedBackgroundColor">SteelBlue</Color>
        <Color x:Key="ErrorBackgroundColor">#80FF8080</Color>

        <SolidColorBrush x:Key="ControlBrush" Color="{StaticResource ControlColor}"/>
        <SolidColorBrush x:Key="TitleAccentBrush" Color="{StaticResource TitleAccentColor}"/>
        <SolidColorBrush x:Key="TitleBackgroundBrush" Color="{StaticResource TitleBackgroundColor}"/>
        <SolidColorBrush x:Key="HoverAccentBrush" Color="{StaticResource HoverAccentColor}"/>
        <SolidColorBrush x:Key="HoverBackgroundBrush" Color="{StaticResource HoverBackgroundColor}"/>
        <SolidColorBrush x:Key="SelectedAccentBrush" Color="{StaticResource SelectedAccentColor}"/>
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="{StaticResource SelectedBackgroundColor}"/>
        <SolidColorBrush x:Key="ErrorBackgroundBrush" Color="{StaticResource ErrorBackgroundColor}" />

        <Style x:Key="Title" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource TitleAccentBrush}"/>
            <Setter Property="Background" Value="{StaticResource TitleBackgroundBrush}"/>
            <Setter Property="Padding" Value="7"/>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource TitleAccentBrush}"/>
            <Setter Property="Background" Value="{StaticResource TitleBackgroundBrush}"/>
            <Setter Property="Padding" Value="15,5,15,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrush}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource HoverBackgroundBrush}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HoverAccentBrush}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource HoverAccentBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="StackPanel" x:Key="ButtonPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Margin" Value="5,0,5,5"/>
            <Style.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Margin" Value="5,0,5,5"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="DataGrid">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource ControlBrush}"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="Cell"/>
        </Style>

        <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
        </Style>
        
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource TitleBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TitleAccentBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="SeparatorVisibility" Value="Collapsed"/>
            <Setter Property="SeparatorBrush" Value="{StaticResource TitleAccentBrush}" />
            <Setter Property="Padding" Value="7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Grid Name="Root">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SortStates">
                                    <VisualState x:Name="Unsorted" />
                                    <VisualState x:Name="SortAscending">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="1.0"/>
                                            <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="(RenderTransform).ScaleY" Duration="0:0:0.5" To=".9"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SortDescending">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="1.0"/>
                                            <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="(RenderTransform).ScaleY" Duration="0:0:0.5" To="-.9"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Border x:Name="BackgroundRectangle" Background="{TemplateBinding Background}"/>

                            <Grid HorizontalAlignment="Stretch"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Margin="{TemplateBinding Padding}">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter Content="{TemplateBinding Content}"/>

                                <Path Grid.Column="1" Name="SortIcon" Fill="{TemplateBinding Foreground}" RenderTransformOrigin=".5,.5" HorizontalAlignment="Left" VerticalAlignment="Center" Opacity="0" Stretch="Uniform" Width="8" Margin="4,0,0,0" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z ">
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleX=".9" ScaleY=".9" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>

                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"/>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"/>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource HoverAccentBrush}"/>
                                <Setter TargetName="BackgroundRectangle" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>

                <Style TargetType="{x:Type Thumb}">
                    <Setter Property="Width" Value="5"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Cursor" Value="SizeWE"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            </Style.Resources>
        </Style>

        <Style TargetType="DataGridCell">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource ControlBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Name="CellBorder" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border>
                                <ContentPresenter Margin="5"/>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Content.Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                                <Setter Property="Background" Value="{StaticResource ErrorBackgroundBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CellBorder" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="CellBorder" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
